{"version":3,"sources":["src/assets/categories/11.png","src/assets/categories/12.png","src/assets/intro/gomer.png","src/assets/intro/1.png","src/assets/intro/2.png","src/assets/intro/3.png","src/Store.tsx","src/selectCategoryGoal/ItemPreview.tsx","src/components/HeadedNavigation.tsx","src/selectCategoryGoal/SelectItemScreen.tsx","src/const/categories.js","src/selectCategoryGoal/SelectCategoryContainer.tsx","src/const/goals.js","src/selectCategoryGoal/SelectGoalContainer.tsx","src/describeGoal/DescribeGoal.tsx","src/describeGoal/GoalConfigurationFinished.tsx","src/components/IntroComponents.tsx","src/navigation/Navigation.tsx","src/App.tsx","src/assets/categories/1.png","src/assets/categories/2.png","src/assets/categories/3.png","src/assets/categories/4.png","src/assets/categories/5.png","src/assets/categories/6.png","src/assets/categories/7.png","src/assets/categories/8.png","src/assets/categories/9.png","src/assets/categories/10.png"],"names":["module","exports","initialState","selectedCategory","undefined","selectedGoal","GlobalContext","React","createContext","children","useState","state","setState","Provider","value","name","img","selectedItem","setSelectedItem","thisSelected","otherSelected","imageSize","useRef","Animated","Value","current","timing","toValue","duration","useNativeDriver","start","Pressable","style","styles","container","opacity","onPress","console","log","Image","image","transform","scale","source","Text","text","StyleSheet","create","minWidth","maxWidth","justifyContent","alignItems","width","flex","aspectRatio","textAlign","fontSize","fontWeight","header","subHeader","navigation","nextButtonExists","navigateNext","prevButtonExists","navigatePrev","navigateNextLabel","View","buttonsContainer","TouchableOpacity","button","buttonBack","buttonText","buttonBackText","disabled","navigateNextDisabled","buttonDisabled","padding","marginTop","marginVertical","backgroundColor","borderRadius","margin","paddingVertical","shadowColor","shadowRadius","shadowOffset","height","borderColor","borderWidth","color","flexDirection","items","HeadedNavigation","all","map","c","ItemPreview","selected","setSelected","flexWrap","flexGrow","flexBasis","flexShrink","categories","require","SelectCategoryContainer","useContext","context","setContext","_categories","category","_context","_navigation","navigate","SelectItemScreen","goals","_goals","goal","everythingFilled","goalDescription","goalCriteria","goalDeadline","goalReason","TextInput","input","placeholder","onChangeText","paddingLeft","marginBottom","maxHeight","JSON","stringify","imageContainer","smallText","textContainer","marginLeft","IntroScreen","nextScreen","FirstScreen","SecondScreen","ThirdScreen","resizeMode","alignSelf","Stack","createNativeStackNavigator","MyTheme","DefaultTheme","colors","background","NavigationContainer","theme","Navigator","screenOptions","headerShown","Screen","component","options","SelectGoalContainer","DescribeGoal","GoalConfigurationFinished","registerRootComponent","Store","Navigation","StatusBar"],"mappings":"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","file":"static/js/app.30563a1f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/11.c17049e9.png\";","module.exports = __webpack_public_path__ + \"static/media/12.ad62d5b5.png\";","module.exports = __webpack_public_path__ + \"static/media/gomer.ecc1665c.png\";","module.exports = __webpack_public_path__ + \"static/media/1.e6e41e39.png\";","module.exports = __webpack_public_path__ + \"static/media/2.8473aac4.png\";","module.exports = __webpack_public_path__ + \"static/media/3.76e4dc5b.png\";","import React, { useState, createContext } from \"react\"\r\n\r\nconst initialState = {\r\n    selectedCategory: undefined,\r\n    selectedGoal: undefined,\r\n}\r\n\r\nexport const GlobalContext = React.createContext(initialState);\r\n\r\nexport default ({children}) => {\r\n    const [state, setState] = useState(initialState);\r\n\r\n    return (\r\n        <GlobalContext.Provider value={[state, setState]}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import { View, Image, Text, StyleSheet, Pressable, Animated } from \"react-native\";\r\nimport { useRef} from \"react\";\r\n\r\nconst IMAGE_SIZE_SELECTED = 1.5;\r\nconst IMAGE_SIZE_UNSELECTED = 1;\r\n\r\nexport default ({name, img, selectedItem, setSelectedItem}) => {\r\n    const thisSelected = name === selectedItem;\r\n    const otherSelected = selectedItem && !thisSelected;\r\n\r\n    const imageSize = useRef(\r\n        new Animated.Value(IMAGE_SIZE_UNSELECTED)\r\n    ).current;\r\n\r\n    const selectImage = () => {\r\n        Animated.timing(imageSize, {\r\n            toValue: IMAGE_SIZE_SELECTED,\r\n            duration: 150,\r\n            useNativeDriver: true,\r\n        }).start();\r\n    }\r\n    const unSelectImage = () => {\r\n        Animated.timing(imageSize, {\r\n            toValue: IMAGE_SIZE_UNSELECTED,\r\n            duration: 150,\r\n            useNativeDriver: true,\r\n        }).start();\r\n    }\r\n\r\n    if (thisSelected) {\r\n        selectImage();\r\n    } else {\r\n        unSelectImage();\r\n    }\r\n\r\n    return (\r\n        <Pressable style={[\r\n            styles.container, \r\n            {opacity: (thisSelected || !otherSelected) ? 1 : 0.6}\r\n        ]}\r\n            onPress={() => {\r\n                console.log(name);\r\n                if (!thisSelected) {\r\n                    setSelectedItem(name);\r\n                } else {\r\n                    setSelectedItem(null);\r\n                }\r\n            }}\r\n        >\r\n            <Animated.Image style={[styles.image, {transform: [{scale: imageSize}]}]} source={img}/>\r\n            <Text style={styles.text}>{name}</Text>\r\n        </Pressable>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        minWidth: \"30%\",\r\n        maxWidth: \"33%\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\",\r\n        width: 0,\r\n        flex: 1\r\n    },\r\n    image: {\r\n        width: \"50%\",\r\n        aspectRatio: 1,\r\n    },\r\n    text: {\r\n        textAlign: \"center\",\r\n        fontSize: 12,\r\n        fontWeight: \"500\",\r\n    },\r\n})","import { Text, View, StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\nexport default ({header, subHeader, navigation, children}) => {\r\n    const nextButtonExists = navigation.navigateNext != null;\r\n    const prevButtonExists = navigation.navigatePrev != null;\r\n    const navigateNextLabel = navigation.navigateNextLabel || \"Далее\";\r\n\r\n    console.log()\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n        <Text style={styles.header}>{header}</Text>\r\n        <Text style={styles.subHeader}>{subHeader}</Text>\r\n\r\n        {children}\r\n\r\n        <View style={styles.buttonsContainer}>\r\n            {\r\n                prevButtonExists &&\r\n                <TouchableOpacity \r\n                    style={[styles.button, styles.buttonBack]}\r\n                    onPress={navigation.navigatePrev}>\r\n                    <Text style={[styles.buttonText, styles.buttonBackText]}>Назад</Text>\r\n                </TouchableOpacity>\r\n            }\r\n            {\r\n                nextButtonExists &&\r\n                <TouchableOpacity \r\n                    disabled={navigation.navigateNextDisabled}\r\n                    style={[\r\n                        styles.button, \r\n                        navigation.navigateNextDisabled && styles.buttonDisabled\r\n                    ]}\r\n                    onPress={navigation.navigateNext}>\r\n                    <Text style={styles.buttonText}>{navigateNextLabel}</Text>\r\n                </TouchableOpacity>\r\n            }\r\n            \r\n        </View>\r\n    </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 20\r\n    },\r\n    header: {\r\n        marginTop: 30,\r\n        fontSize: 18,\r\n        textAlign: \"center\",\r\n        fontWeight: \"500\",\r\n    },\r\n    subHeader: {\r\n        marginVertical: 30,\r\n        fontSize: 16,\r\n        textAlign: \"center\",\r\n        fontWeight: \"400\",\r\n    },\r\n    button: {\r\n        backgroundColor: \"#64ACFF\",\r\n        borderRadius: 10,\r\n        margin: 10,\r\n        paddingVertical: 13,\r\n        shadowColor: 'rgba(0, 0, 0, 0.15)',\r\n        shadowRadius: 5,\r\n        shadowOffset : { width: 1, height: 5},\r\n        flex: 1\r\n    },\r\n    buttonBack: {\r\n        backgroundColor: \"white\",\r\n        borderColor: \"#64ACFF\",\r\n        borderWidth: 2,\r\n    },\r\n    buttonDisabled: {\r\n        backgroundColor: \"#B2D6FF\",\r\n    },\r\n    buttonText: {\r\n        color: \"white\",\r\n        textAlign: \"center\",\r\n        fontSize: 15,\r\n        fontWeight: \"500\",\r\n    },\r\n    buttonBackText: {\r\n        color: \"#64ACFF\",\r\n    },\r\n    buttonsContainer: {\r\n        flexDirection: \"row\"\r\n    }\r\n});","import { Text, View, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport ItemPreview from 'selectCategoryGoal/ItemPreview'\r\nimport HeadedNavigation from 'components/HeadedNavigation';\r\n\r\nexport default ({header, subHeader, items, navigation}) => {\r\n    return (\r\n        <HeadedNavigation \r\n         header={header}\r\n         subHeader={subHeader}\r\n         navigation={navigation}\r\n         >\r\n            <View style={styles.items}>\r\n             {items.all.map(c => {\r\n                 return (\r\n                   <ItemPreview key={c.name} \r\n                     name={c.name} img={c.img}\r\n                     selectedItem={items.selected}\r\n                     setSelectedItem={items.setSelected}\r\n                   />\r\n                 )\r\n             })\r\n         }\r\n         </View>\r\n            </HeadedNavigation>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    items: {\r\n        flexWrap: \"wrap\",\r\n        flexDirection: \"row\",\r\n        flexGrow: 1,\r\n        flexBasis: \"0px\",\r\n        flexShrink: 1,\r\n    },\r\n});","const categories = [\r\n    {name: \"Развлечения\", img: require(\"assets/categories/1.png\")}, \r\n    {name: \"Экология\", img: require(\"assets/categories/2.png\")}, \r\n    {name: \"Будущее\", img: require(\"assets/categories/3.png\")}, \r\n    {name: \"Новые медиа\", img: require(\"assets/categories/4.png\")}, \r\n    {name: \"Спорт\", img: require(\"assets/categories/5.png\")}, \r\n    {name: \"Медицина\", img: require(\"assets/categories/6.png\")}, \r\n    {name: \"Социальные проекты\", img: require(\"assets/categories/7.png\")}, \r\n    {name: \"Образование\", img: require(\"assets/categories/8.png\")}, \r\n    {name: \"Путешествия\", img: require(\"assets/categories/9.png\")}, \r\n    {name: \"Сельское хозяйство\", img: require(\"assets/categories/10.png\")}, \r\n    {name: \"Предпренимательство\", img: require(\"assets/categories/11.png\")}\r\n]\r\n\r\nexport default categories;","import React from \"react\";\r\nimport { useState, useContext } from \"react\";\r\nimport SelectItemScreen from \"selectCategoryGoal/SelectItemScreen\"\r\nimport categories from \"const/categories\";\r\nimport {GlobalContext} from \"Store\";\r\n\r\nexport function SelectCategoryContainer({navigation}) {\r\n    const [context, setContext] = useContext(GlobalContext);\r\n    const _categories = {\r\n      all: categories,\r\n      selected: context.selectedCategory,\r\n      setSelected: (category) => setContext(_context => (\r\n        {..._context, selectedCategory: category}\r\n      )),\r\n    }\r\n    const _navigation = {\r\n      // allow skip category selection\r\n      // navigateNextDisabled: context.selectedCategory == null, \r\n      navigateNext: () => navigation.navigate(\"SelectGoal\"),\r\n    }\r\n\r\n    return (\r\n        <SelectItemScreen\r\n            header=\"Шаг 1 из 5\"\r\n            subHeader=\"Выберите категорию\"\r\n            navigation={_navigation}\r\n            items={_categories}\r\n          />\r\n    )\r\n}\r\n\r\nexport default SelectCategoryContainer;","const goals = [\r\n    {name: \"Повышение на работе\", img: require(\"assets/categories/1.png\")}, \r\n    {name: \"Прочесть книгу\", img: require(\"assets/categories/2.png\")}, \r\n    {name: \"Заработать денег\", img: require(\"assets/categories/3.png\")}, \r\n    {name: \"Купить машину\", img: require(\"assets/categories/4.png\")}, \r\n    {name: \"Прыгнуть с парашютом\", img: require(\"assets/categories/5.png\")}, \r\n    {name: \"Завести котика\", img: require(\"assets/categories/6.png\")}, \r\n    {name: \"Покушать борщ\", img: require(\"assets/categories/7.png\")}, \r\n    {name: \"Почистить зубы\", img: require(\"assets/categories/8.png\")}, \r\n    {name: \"Купить хлеб\", img: require(\"assets/categories/9.png\")}, \r\n    {name: \"Постирать носочки\", img: require(\"assets/categories/10.png\")}, \r\n    {name: \"Купить дом\", img: require(\"assets/categories/11.png\")},\r\n    {name: \"Своя цель\", img: require(\"assets/categories/12.png\")},\r\n]\r\n\r\nexport default goals;","import { useState, useContext } from \"react\";\r\nimport SelectItemScreen from \"selectCategoryGoal/SelectItemScreen\"\r\nimport goals from \"const/goals\";\r\nimport { GlobalContext } from \"Store\";\r\n\r\nexport default ({navigation}) => {\r\n    const [context, setContext] = useContext(GlobalContext);\r\n    // const [selectedGoal, setSelectedGoal] = useState(null);\r\n    const _goals = {\r\n        all: goals,\r\n        selected: context.selectedGoal,\r\n        setSelected: (goal) => setContext((_context) => (\r\n            {..._context, selectedGoal: goal}\r\n        ))\r\n        // setSelected: setSelectedGoal\r\n    }\r\n    const _navigation = {\r\n        navigateNextDisabled: context.selectedGoal == null,\r\n        navigateNext: () => navigation.navigate(\"DescribeGoal\"),\r\n        navigatePrev: () => navigation.navigate(\"SelectCategory\")\r\n    }\r\n    return (\r\n        <SelectItemScreen\r\n          header=\"Шаг 2 из 5\"\r\n          subHeader=\"Какая у тебя цель?\"\r\n          navigation={_navigation}\r\n          items={_goals}\r\n        />\r\n    )\r\n}","import { View, Text, TextInput, StyleSheet } from \"react-native\";\r\nimport HeadedNavigation from \"components/HeadedNavigation\"\r\nimport { useContext } from \"react\";\r\nimport { GlobalContext } from \"Store\";\r\n\r\n\r\nexport default ({navigation}) => {\r\n    const [context, setContext] = useContext(GlobalContext);\r\n\r\n\r\n    const everythingFilled = context.goalDescription \r\n        && context.goalCriteria \r\n        && context.goalDeadline \r\n        && context.goalReason;\r\n\r\n    console.log(context);\r\n    const _navigation = {\r\n        navigateNextDisabled: !everythingFilled,\r\n        navigateNext: () => navigation.navigate(\"GoalConfigurationFinished\"),\r\n        navigatePrev: () => navigation.navigate(\"SelectGoal\")\r\n    }\r\n    return (\r\n        <HeadedNavigation\r\n          header=\"Шаг 3 из 5\"\r\n          subHeader=\"Расскажи подробнее о цели\"\r\n          navigation={_navigation}>\r\n            <View style={styles.container}>\r\n                <TextInput style={styles.input} \r\n                  placeholder=\"Какая у тебя цель?\" \r\n                  onChangeText={(input) => setContext({...context, goalDescription: input})}\r\n                  value={context.goalDescription}\r\n                />\r\n\r\n                <TextInput style={styles.input} \r\n                  placeholder=\"Как можно измерить успех?\" \r\n                  onChangeText={(input) => setContext({...context, goalCriteria: input})}\r\n                  value={context.goalCriteria}\r\n                />\r\n\r\n                <TextInput style={styles.input} \r\n                  placeholder=\"Поставь себе дедлайн\" \r\n                  onChangeText={(input) => setContext({...context, goalDeadline: input})}\r\n                  value={context.goalDeadline}\r\n                />\r\n\r\n                <TextInput style={styles.input} \r\n                  placeholder=\"Для чего тебе добиваться цели?\" \r\n                  onChangeText={(input) => setContext({...context, goalReason: input})}\r\n                  value={context.goalReason}\r\n                />\r\n            </View>\r\n        </HeadedNavigation>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: \"flex-start\"\r\n    },\r\n    input: {\r\n        textAlign: \"left\",\r\n        borderWidth: 2,\r\n        borderColor: \"#DFEFFD\",\r\n        borderRadius: 25,\r\n        paddingLeft: 20,\r\n        paddingVertical: 15,\r\n        flex: 1,\r\n        marginBottom: 20,\r\n        maxHeight: 60,\r\n    }\r\n})","import { useContext } from \"react\";\r\nimport { View, Image, Text, StyleSheet } from \"react-native\";\r\nimport HeadedNavigation from \"components/HeadedNavigation\"\r\nimport { GlobalContext } from \"Store\";\r\n\r\nexport default ({navigation}) => {\r\n    const [context, setContext] = useContext(GlobalContext);\r\n\r\n    console.log(\"finish: \" + JSON.stringify(context));\r\n\r\n    const _navigation = {\r\n        navigateNext: () => {navigation.navigate(\"SelectCategory\")},\r\n        navigateNextLabel: \"Перейти к каналам\",\r\n    }\r\n    return (\r\n        <HeadedNavigation\r\n          header=\"Поздравляем!\"\r\n          subHeader=\"Цель сформулирована, через 2е суток с тобой свяжется ментор\"\r\n          navigation={_navigation}\r\n        >\r\n            <View style={styles.imageContainer}>\r\n                <Image style={styles.image} source={require(\"assets/intro/gomer.png\")}/>\r\n                <Text style={styles.smallText}>Категория: {context.selectedCategory}</Text>\r\n                <Text style={styles.smallText}>Цель: {context.selectedGoal}</Text>\r\n                <Text style={styles.smallText}>Описание: {context.goalDescription}</Text>\r\n                <Text style={styles.smallText}>Критерии достижения: {context.goalCriteria}</Text>\r\n                <Text style={styles.smallText}>Дедлайн: {context.goalDeadline}</Text>\r\n                <Text style={styles.smallText}>Зачем: {context.goalReason}</Text>\r\n                <View style={styles.textContainer}>\r\n                    <Text style={styles.text}>Пока можешь почитать полезные каналы по своей теме</Text>\r\n                </View>\r\n            </View>\r\n        </HeadedNavigation>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    imageContainer: {\r\n        flex: 1,\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n    },\r\n    image: {\r\n        width: 250,\r\n        height: 200,\r\n        marginLeft: 50,\r\n    },\r\n    textContainer: {\r\n        justifyContent: \"flex-end\",\r\n        alignItems: \"flex-end\",\r\n    },\r\n    text: {\r\n        textAlign: \"center\",\r\n        fontSize: 16,\r\n        fontWeight: \"400\",\r\n    },\r\n    smallText: {\r\n        textAlign: \"left\",\r\n        fontSize: 8\r\n    }\r\n})","\r\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as React from 'react';\r\nimport { ColorSchemeName, Text, StyleSheet, Image, Button, TouchableHighlight  } from 'react-native';\r\nimport HeadedNavigation from './HeadedNavigation';\r\n\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst IntroScreen = ({navigation, subHeader, image, nextScreen}) => {\r\n    const _navigation = {\r\n        navigateNext: () => navigation.navigate(nextScreen),\r\n      }\r\n  \r\n    return (\r\n        <HeadedNavigation\r\n          header=\"Привет, дорогой друг!\"\r\n          subHeader={subHeader}\r\n          navigation={_navigation}>\r\n\r\n            <Image source={image} style={styles.image}/>\r\n\r\n        </HeadedNavigation>\r\n    );\r\n}\r\n\r\nexport function FirstScreen({navigation}) { \r\n    return (\r\n        <IntroScreen\r\n          subHeader=\"Отсюда начинается твоя игра по достижению заветной цели.\"\r\n          navigation={navigation}\r\n          image={require('assets/intro/1.png')}\r\n          nextScreen=\"SecondScreen\"\r\n          />\r\n    );\r\n}\r\n\r\nexport function SecondScreen({navigation}) { \r\n    return (\r\n        <IntroScreen\r\n          subHeader=\"На каждом шаге. Ты зарабатываешь монеты, которые можно тратить в супермаркете идей.\"\r\n          navigation={navigation}\r\n          image={require('assets/intro/2.png')}\r\n          nextScreen=\"ThirdScreen\"\r\n          />\r\n    );\r\n}\r\n\r\n\r\nexport function ThirdScreen({navigation}) { \r\n    return (\r\n        <IntroScreen\r\n          subHeader=\"Добейся своей цели. Мы верим в тебя!\"\r\n          navigation={navigation}\r\n          image={require('assets/intro/3.png')}\r\n          nextScreen=\"SelectCategory\"\r\n          />\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  image : {\r\n    width: 250, \r\n    height: 250, \r\n    marginBottom: \"50px\",\r\n    resizeMode: 'contain',\r\n    alignSelf: 'center',\r\n    flex: 1,\r\n    alignItems: \"flex-start\",\r\n}\r\n})\r\n","import { NavigationContainer, DefaultTheme  } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\"\r\nimport SelectCategoryContainer from \"selectCategoryGoal/SelectCategoryContainer\"\r\nimport SelectGoalContainer from \"selectCategoryGoal/SelectGoalContainer\"\r\nimport DescribeGoal from \"describeGoal/DescribeGoal\";\r\nimport GoalConfigurationFinished from \"describeGoal/GoalConfigurationFinished\";\r\nimport { FirstScreen, SecondScreen, ThirdScreen } from \"components/IntroComponents\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst MyTheme = {\r\n    ...DefaultTheme,\r\n    colors: {\r\n      ...DefaultTheme.colors,\r\n      background: 'white'\r\n    },\r\n  };\r\n\r\nexport default () => {\r\n    return (\r\n    <NavigationContainer theme={MyTheme}>\r\n        <Stack.Navigator\r\n        screenOptions={{\r\n            headerShown: false\r\n          }}>\r\n            <Stack.Screen name=\"FirstScreen\" component={FirstScreen} options={{ headerShown: false }} />\r\n            <Stack.Screen name=\"SecondScreen\" component={SecondScreen} options={{ headerShown: false }} />\r\n            <Stack.Screen name=\"ThirdScreen\" component={ThirdScreen} options={{ headerShown: false }} />\r\n            <Stack.Screen name=\"SelectCategory\" component={SelectCategoryContainer} />\r\n            <Stack.Screen name=\"SelectGoal\" component={SelectGoalContainer} />\r\n            <Stack.Screen name=\"DescribeGoal\" component={DescribeGoal} />\r\n            <Stack.Screen name=\"GoalConfigurationFinished\" component={GoalConfigurationFinished} />\r\n        </Stack.Navigator>\r\n    </NavigationContainer>\r\n    )\r\n}","import React, { useContext, useState } from \"react\";\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { registerRootComponent } from 'expo';\n\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nimport Store from \"Store\"\nimport Navigation from 'navigation/Navigation';\n\nconst Stack = createNativeStackNavigator();\n\nfunction App() {\n    return (\n      <SafeAreaProvider>\n        <Store>\n          <Navigation/>\n        </Store>\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n}\n\nregisterRootComponent(App);","module.exports = __webpack_public_path__ + \"static/media/1.4ef15d43.png\";","module.exports = __webpack_public_path__ + \"static/media/2.c261a0d2.png\";","module.exports = __webpack_public_path__ + \"static/media/3.a1928266.png\";","module.exports = __webpack_public_path__ + \"static/media/4.12a7f8d6.png\";","module.exports = __webpack_public_path__ + \"static/media/5.c28b749a.png\";","module.exports = __webpack_public_path__ + \"static/media/6.e24c0b0e.png\";","module.exports = __webpack_public_path__ + \"static/media/7.e202d3ef.png\";","module.exports = __webpack_public_path__ + \"static/media/8.b3692b78.png\";","module.exports = __webpack_public_path__ + \"static/media/9.ad468d65.png\";","module.exports = __webpack_public_path__ + \"static/media/10.0fa3a093.png\";"],"sourceRoot":""}